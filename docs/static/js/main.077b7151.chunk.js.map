{"version":3,"sources":["model/generator.ts","components/DayCell.tsx","components/WeekRow.tsx","components/TBodySelection.tsx","Page.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Generator","year","this","moment","locale","weeks","nextYear","startOf","add","day1","push","clone","isBefore","DayCell","eventNames","className","classNames","onMouseDown","_onMouseDown","bind","onMouseEnter","_onMouseEnter","onMouseUp","_onMouseUp","props","children","join","e","preventDefault","setState","state","mouseDown","reportSelected","date","reportMouseUp","buttons","classes","isSelected","events","map","event","start","startDate","end","endDate","isSame","isBetween","id","name","React","Component","WeekRow","plus","today","dayOfTheWeek","monday","month","format","minSelected","maxSelected","between","isCurrentWeek","isToday","day","TBodySelection","minDate","maxDate","db","Dexie","version","stores","fetchData","table","toArray","console","log","min","max","prompt","put","key","Page","generator","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","Container","Table","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.077b7151.chunk.js","sourcesContent":["import moment from \"moment\";\nimport 'moment/locale/de';\n\nexport class Generator {\n\n\tyear: number;\n\n\tconstructor(year: number) {\n\t\tthis.year = year;\n\t\tmoment.locale('de');\n\t}\n\n\tget weeks() {\n\t\tconst weeks: moment.Moment[] = [];\n\t\tconst nextYear = moment().startOf('year').add(1, 'y');\n\t\t// console.log(nextYear.format('YYYY-MM-DD'));\n\n\t\tlet day1 = moment().startOf('year').startOf('week');\n\t\tdo {\n\t\t\tweeks.push(day1.clone());\n\t\t\tday1 = day1.add('1', 'w');\n\t\t} while (day1.isBefore(nextYear));\n\t\treturn weeks;\n\t}\n\n}\n","import React, {MouseEventHandler} from \"react\";\nimport moment from \"moment\";\nimport {IEvent} from \"./TBodySelection\";\n\ninterface IDayCellProps {\n\tclassName: string;\n\tdate: moment.Moment;\n\treportSelected: Function;\n\treportMouseUp: Function;\n\tisSelected?: boolean;\n\tevents: IEvent[];\n}\n\ninterface IDayCellState {\n}\n\nexport class DayCell extends React.Component<IDayCellProps, IDayCellState> {\n\n\teventNames: string[] = [];\n\n\tget classNames() {\n\t\tconst classes: string[] = [];\n\t\tclasses.push(this.props.className);\n\t\tclasses.push(this.props.isSelected ? ' selected' : '');\n\n\t\tthis.eventNames = [];\n\t\tthis.props.events.map((event: IEvent) => {\n\t\t\tconst start = moment(event.startDate);\n\t\t\tconst end = moment(event.endDate);\n\t\t\tif (this.props.date.isSame(start) || this.props.date.isBetween(start, end) || this.props.date.isSame(end)) {\n\t\t\t\tclasses.push('event-' + event.id);\n\t\t\t\tthis.eventNames.push(event.name);\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\treturn classes.join(' ');\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<td className={this.classNames}\n\t\t\t\tonMouseDown={this._onMouseDown.bind(this) as unknown as MouseEventHandler}\n\t\t\t\tonMouseEnter={this._onMouseEnter.bind(this) as unknown as MouseEventHandler}\n\t\t\t\tonMouseUp={this._onMouseUp.bind(this) as unknown as MouseEventHandler}\n\t\t\t>\n\t\t\t\t{this.props.children} &nbsp;\n\t\t\t\t{this.eventNames.join(' ')}\n\t\t\t</td>\n\t\t)\n\t}\n\n\t_onMouseDown(e: MouseEvent) {\n\t\te.preventDefault();\n\t\tthis.setState(state => ({\n\t\t\t...state,\n\t\t\tmouseDown: true,\n\t\t}));\n\t\tthis.props.reportSelected(this.props.date);\n\t}\n\n\t/**\n\t * On document element mouse up\n\t */\n\t_onMouseUp(e: MouseEvent) {\n\t\te.preventDefault();\n\t\tthis.setState(state => ({\n\t\t\t...state,\n\t\t\tmouseDown: false,\n\t\t}));\n\t\tthis.props.reportMouseUp(this.props.date);\n\t}\n\n\t/**\n\t * On document element mouse move\n\t */\n\t_onMouseEnter(e: MouseEvent) {\n\t\te.preventDefault();\n\t\tif (e.buttons !== 1) {\n\t\t\treturn;\n\t\t}\n\t\tthis.props.reportSelected(this.props.date);\n\t}\n\n}\n","import React from \"react\";\nimport moment from \"moment\";\nimport {DayCell} from \"./DayCell\";\nimport {IEvent} from \"./TBodySelection\";\n\ninterface IWeekRowProps {\n\tmonday: moment.Moment;\n\treportSelected: Function;\n\treportMouseUp: Function;\n\tminSelected: moment.Moment | null;\n\tmaxSelected: moment.Moment | null;\n\tevents: IEvent[];\n}\n\nexport class WeekRow extends React.Component<IWeekRowProps, {}> {\n\n\tisToday(plus: number) {\n\t\tconst classes: string[] = [];\n\t\tconst today = moment();\n\t\tlet dayOfTheWeek = this.props.monday.clone().add(plus, 'd');\n\t\tif (dayOfTheWeek.isSame(today, 'day')) {\n\t\t\tclasses.push('bg-success');\n\t\t}\n\n\t\t// month, Jan, Feb\n\t\tconst month = dayOfTheWeek.locale('en').format('MMM');\n\t\tclasses.push('month-' + month);\n\n\t\treturn classes.join(' ');\n\t}\n\n\tget isCurrentWeek() {\n\t\tconst today = moment();\n\t\tif (this.props.monday.isSame(today, 'week')) {\n\t\t\treturn 'bg-success';\n\t\t}\n\t\treturn '';\n\t}\n\n\tday(plus: number) {\n\t\tlet dayOfTheWeek = this.props.monday.clone().add(plus, 'd');\n\t\treturn dayOfTheWeek.format('DD');\n\t}\n\n\tdate(plus: number) {\n\t\tlet dayOfTheWeek = this.props.monday.clone().add(plus, 'd');\n\t\treturn dayOfTheWeek;\n\t}\n\n\tisSelected(plus: number) {\n\t\tif (!this.props.minSelected || !this.props.maxSelected) {\n\t\t\treturn false;\n\t\t}\n\t\tlet dayOfTheWeek = this.props.monday.clone().add(plus, 'd');\n\t\tlet between = dayOfTheWeek.isBetween(this.props.minSelected, this.props.maxSelected, 'day');\n\t\treturn dayOfTheWeek.isSame(this.props.minSelected) || between || dayOfTheWeek.isSame(this.props.maxSelected);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<tr>\n\t\t\t\t<td className={'weekNumber ' + this.isCurrentWeek}>\n\t\t\t\t\t#{this.props.monday.format('ww')}\n\t\t\t\t</td>\n\t\t\t\t<DayCell className={this.isToday(0)}\n\t\t\t\t\t\t date={this.date(0)}\n\t\t\t\t\t\t reportSelected={this.props.reportSelected}\n\t\t\t\t\t\t reportMouseUp={this.props.reportMouseUp}\n\t\t\t\t\t\t isSelected={this.isSelected(0)}\n\t\t\t\t\t\t events={this.props.events}\n\t\t\t\t>\n\t\t\t\t\t{this.day(0)}\n\t\t\t\t</DayCell>\n\t\t\t\t<DayCell className={this.isToday(1)}\n\t\t\t\t\t\t date={this.date(1)}\n\t\t\t\t\t\t reportSelected={this.props.reportSelected}\n\t\t\t\t\t\t reportMouseUp={this.props.reportMouseUp}\n\t\t\t\t\t\t isSelected={this.isSelected(1)}\n\t\t\t\t\t\t events={this.props.events}\n\t\t\t\t>\n\t\t\t\t\t{this.day(1)}\n\t\t\t\t</DayCell>\n\t\t\t\t<DayCell className={this.isToday(2)}\n\t\t\t\t\t\t date={this.date(2)}\n\t\t\t\t\t\t reportSelected={this.props.reportSelected}\n\t\t\t\t\t\t reportMouseUp={this.props.reportMouseUp}\n\t\t\t\t\t\t isSelected={this.isSelected(2)}\n\t\t\t\t\t\t events={this.props.events}\n\t\t\t\t>\n\t\t\t\t\t{this.day(2)}\n\t\t\t\t</DayCell>\n\t\t\t\t<DayCell className={this.isToday(3)}\n\t\t\t\t\t\t date={this.date(3)}\n\t\t\t\t\t\t reportSelected={this.props.reportSelected}\n\t\t\t\t\t\t reportMouseUp={this.props.reportMouseUp}\n\t\t\t\t\t\t isSelected={this.isSelected(3)}\n\t\t\t\t\t\t events={this.props.events}\n\t\t\t\t>\n\t\t\t\t\t{this.day(3)}\n\t\t\t\t</DayCell>\n\t\t\t\t<DayCell className={this.isToday(4)}\n\t\t\t\t\t\t date={this.date(4)}\n\t\t\t\t\t\t reportSelected={this.props.reportSelected}\n\t\t\t\t\t\t reportMouseUp={this.props.reportMouseUp}\n\t\t\t\t\t\t isSelected={this.isSelected(4)}\n\t\t\t\t\t\t events={this.props.events}\n\t\t\t\t>\n\t\t\t\t\t{this.day(4)}\n\t\t\t\t</DayCell>\n\t\t\t\t<DayCell className={'weekend ' + this.isToday(5)}\n\t\t\t\t\t\t date={this.date(5)}\n\t\t\t\t\t\t reportSelected={this.props.reportSelected}\n\t\t\t\t\t\t reportMouseUp={this.props.reportMouseUp}\n\t\t\t\t\t\t isSelected={this.isSelected(5)}\n\t\t\t\t\t\t events={this.props.events}\n\t\t\t\t>\n\t\t\t\t\t{this.day(5)}\n\t\t\t\t</DayCell>\n\t\t\t\t<DayCell className={'weekend ' + this.isToday(6)}\n\t\t\t\t\t\t date={this.date(6)}\n\t\t\t\t\t\t reportSelected={this.props.reportSelected}\n\t\t\t\t\t\t reportMouseUp={this.props.reportMouseUp}\n\t\t\t\t\t\t isSelected={this.isSelected(6)}\n\t\t\t\t\t\t events={this.props.events}\n\t\t\t\t>\n\t\t\t\t\t{this.day(6)}\n\t\t\t\t</DayCell>\n\t\t\t</tr>\n\t\t);\n\t}\n\n}\n","import React from \"react\";\nimport moment from \"moment\";\nimport {WeekRow} from \"./WeekRow\";\nimport Dexie from 'dexie';\n\nexport interface IEvent {\n\tid?: number;\n\tname: string;\n\tstartDate: moment.Moment;\n\tendDate: moment.Moment;\n}\n\ninterface ITBodySelectionProps {\n\tweeks: moment.Moment[];\n}\n\ninterface ITBodySelectionState {\n\tminDate: moment.Moment | null;\n\tmaxDate: moment.Moment | null;\n\tevents: IEvent[];\n}\n\nexport class TBodySelection extends React.Component<ITBodySelectionProps, ITBodySelectionState> {\n\n\tstate = {\n\t\tminDate: null,\n\t\tmaxDate: null,\n\t\tevents: [],\n\t};\n\n\tdb = new Dexie(\"Year-Week-Day\");\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.db.version(1).stores({\n\t\t\tevents: \"++id,name,startDate,endDate\"\n\t\t});\n\t}\n\n\tcomponentDidMount(): void {\n\t\tthis.fetchData();\n\t}\n\n\tasync fetchData() {\n\t\tconst events = await this.db.table('events').toArray();\n\t\tconsole.log(events);\n\t\tthis.setState((state) => ({\n\t\t\t...state,\n\t\t\tevents: events,\n\t\t}))\n\t}\n\n\treportSelected(date: moment.Moment) {\n\t\t// console.log(date.format('YYYY-MM-DD'));\n\t\tif (!this.state || !this.state.minDate || !this.state.maxDate) {\n\t\t\tthis.setState((state) => ({\n\t\t\t\t...state,\n\t\t\t\tminDate: date.clone(),\n\t\t\t\tmaxDate: date.clone(),\n\t\t\t}));\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState((state) => ({\n\t\t\t...state,\n\t\t\tmaxDate: date.clone(),\n\t\t}));\n\t}\n\n\tasync reportMouseUp(date: moment.Moment) {\n\t\tif (!this.state.minDate || !this.state.maxDate) {\n\t\t\treturn;\n\t\t}\n\t\tlet min = this.state.minDate as unknown as moment.Moment;\n\t\tlet max = this.state.maxDate as unknown as moment.Moment;\n\t\tconst name = prompt(`What happens between ${min.format('YYYY-MM-DD')} and ${max.format('YYYY-MM-DD')}?`);\n\t\tif (name) {\n\t\t\tawait this.db.table('events').put({\n\t\t\t\tname,\n\t\t\t\tstartDate: min.format('YYYY-MM-DD'),\n\t\t\t\tendDate: max.format('YYYY-MM-DD'),\n\t\t\t});\n\t\t\tthis.fetchData();\t// update\n\t\t}\n\t\tthis.setState((state) => ({\n\t\t\t...state,\n\t\t\tminDate: null,\n\t\t\tmaxDate: null,\n\t\t}));\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<tbody>\n\t\t\t{this.props.weeks.map((monday: moment.Moment) => (\n\t\t\t\t<WeekRow key={monday.format('YYYY-MM-DD')}\n\t\t\t\t\t\t monday={monday}\n\t\t\t\t\t\t reportSelected={this.reportSelected.bind(this)}\n\t\t\t\t\t\t reportMouseUp={this.reportMouseUp.bind(this)}\n\t\t\t\t\t\t minSelected={this.state.minDate}\n\t\t\t\t\t\t maxSelected={this.state.maxDate}\n\t\t\t\t\t\t events={this.state.events}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t</tbody>\n\t\t)\n\t}\n\n}\n","import React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport {Generator} from \"./model/generator\";\nimport Table from \"react-bootstrap/Table\";\nimport {TBodySelection} from \"./components/TBodySelection\";\n\nexport class Page extends React.Component<any, any> {\n\n\tgenerator = new Generator(2020);\n\n\tstate = {\n\t\tweeks: [],\n\t};\n\n\tcomponentDidMount(): void {\n\t\tlet weeks = this.generator.weeks;\n\t\tthis.setState(() => ({\n\t\t\tweeks: weeks,\n\t\t}));\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Navbar bg=\"light\" expand=\"lg\">\n\t\t\t\t\t<Navbar.Brand href=\".\">Year-Week-Day</Navbar.Brand>\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t\t<Nav.Link href=\"#home\">Home</Nav.Link>\n\t\t\t\t\t\t\t<Nav.Link href=\"#link\">Link</Nav.Link>\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Navbar>\n\t\t\t\t<Container>\n\t\t\t\t\t<Table>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>Week #</td>\n\t\t\t\t\t\t\t<td>Monday</td>\n\t\t\t\t\t\t\t<td>Tuesday</td>\n\t\t\t\t\t\t\t<td>Wednesday</td>\n\t\t\t\t\t\t\t<td>Thursday</td>\n\t\t\t\t\t\t\t<td>Friday</td>\n\t\t\t\t\t\t\t<td>Saturday</td>\n\t\t\t\t\t\t\t<td>Sunday</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<TBodySelection weeks={this.state.weeks}>\n\t\t\t\t\t\t</TBodySelection>\n\t\t\t\t\t</Table>\n\t\t\t\t</Container>\n\t\t\t</>\n\t\t);\n\t}\n\n}\n","import React from 'react';\nimport './css/App.css';\nimport {Page} from \"./Page\";\n\nconst App = () => {\n\treturn (\n\t\t<>\n\t\t\t<Page/>\n\t\t</>\n\t);\n};\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}